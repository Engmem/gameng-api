syntax = "proto3";

package gameng;

option go_package = "quibex.gameng.v1;gamengv1";

service Gameng {
  // Для получения новых 4 слов для пользователя
  // Выводим для ознакомления
  rpc GetNewWords(GetNewWordsRequest) returns (GetNewWordsResponse) {}

  // Для получения слов с переводами для пользователя
  // Выводим по 1 слову с переводами (кнопками) (1 из 4 верный)
  rpc GetWordWithTranslations(GetWordsWithTranslationsRequest) returns (GetWordsWithTranslationsResponse) {}

  // Для получения слов с аудио и переводами
  // Выводим по 1 аудио и переводами (кнопками) (1 из 4 верный)
  rpc GetWordByAudio(GetWordsByAudioRequest) returns (GetWordsByAudioResponse) {}

  // Для получения предложений с пропущенным словом
  // Выводим по 1 предложению с словоми (кнопками) (1 из 4 верный)
  rpc GetSentencesWithMissingWord(GetSentencesWithMissingWordRequest) returns (GetSentencesWithMissingWordResponse) {}

  // Для получения слова для перевода
  // Пользовтель должен ввести перевод слова (можно принять с 2 ошибками или дропать после 3 неудачных попыток)
  rpc GetWordForTranslation(GetWordForTranslationRequest) returns (GetWordForTranslationResponse) {}
}

message GetNewWordsRequest {
  uint64 user_id = 1;
}

message GetNewWordsResponse {
  map<string, string> words_translations = 1;
  uint64 offset = 2;
}

message GetWordsWithTranslationsRequest {
  uint64 offset = 1;
}

message GetWordsWithTranslationsResponse {
  map<string, string> words_translations = 1;
}

message GetWordsByAudioRequest {
  uint64 offset = 1;
}

message GetWordsByAudioResponse {
  repeated AudioTranslationPair audio_translation_pairs = 1;
  // Map key cannot be float, double, bytes, message, or enum types
}

message AudioTranslationPair {
  // audio file in bytes, used github.com/hajimehoshi/go-mp3
  bytes audio = 1;
  string translation = 2;
}

message GetSentencesWithMissingWordRequest {
  uint64 offset = 1;
}

message GetSentencesWithMissingWordResponse {
  map<string, string> sentences_words = 1;
}

message GetWordForTranslationRequest {
  uint64 offset = 1;
}

message GetWordForTranslationResponse {
  map<string, string> words_translations = 1;
}





